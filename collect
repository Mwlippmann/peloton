#!/usr/bin/env python3
import os
import requests
import json
from datetime import datetime
from pelotondatabase import insert_user
from filter_tables import user_filter

api_url = 'https://api.onepeloton.com/api/'
s = requests.Session()
payload = {'username_or_email': os.environ['USER'], 'password': os.environ['PELOTONPASS'] }
s.post('https://api.onepeloton.com/auth/login', json=payload)

user_dict = {}
my_api = 'me'
my_info = s.get(api_url + my_api)
userdata = json.loads(my_info.content.decode('UTF-8'))
for item,value in userdata.items():
    if item in user_filter['items']:
        user_dict[item] = value
    elif item in user_filter['dates']:
        user_dict[item] =  datetime.utcfromtimestamp(value)
insert_user(user_dict)
exit()

data = s.get(api_url + 'user/' + my_id + '/workouts?limit=2000')
parsed = json.loads(data.content.decode('UTF-8'))
workouts = parsed['data']

workout_ids = []
for workout in workouts:
    workout_ids.append(workout.get('id'))

    
all_workouts = []
for id in workout_ids:
    full_workout = s.get(api_url + 'workout/' + id)
    parsed = json.loads(full_workout.content.decode('UTF-8'))
    all_workouts.append(parsed)

print(json.dumps(all_workouts,indent=2,sort_keys=True))

durations = []
for workout in all_workouts:
    ride = workout['ride']
    duration = ride['duration']
    durations.append(duration)
    title = ride['title']
    name = workout['name']
    total_work = workout['total_work']
    start_time = workout['start_time']
    start_time = datetime.utcfromtimestamp(start_time).strftime('%Y-%m-%d %H:%M:%S')
    if 'original_air_time' in ride:
     original_air_time = ride['original_air_time']
     original_air_time = datetime.utcfromtimestamp(original_air_time).strftime('%Y-%m-%d %H:%M:%S')
    else:
     original_air_time = ''
    print(start_time, name, duration, total_work, title, original_air_time)

print(set(durations))
